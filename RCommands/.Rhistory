print("hello, world")
install.packages("sna")
graph = rgraph(10, 1, 0.2, "graph", FALSE)
library(sna)
graph = rgraph(10, 1, 0.2, "graph", FALSE)
View(graph)
graph
degree(graph)
gden(graph, mode = "graph")
graph.plot()
gplop(graph)
gplot(graph)
data(SNN_Example)
library(GraphClusterAnalysis)
library(RBGL)
library(igraph)
library(graph)
data(SNN_Example)
install.packages("GraphClusterAnalysis")
install.packages("RBGL")
install.packages("igraph")
install.packages("graph")
library(GraphClusterAnalysis)
library(RBGL)
library(igraph)
library(graph)
library(networkD3)
install.packages("networkD3")
library(networkD3)
simpleNetwork(networkData,fontSize=25)
library(networkD3)
src <- c("A", "A", "A", "A",
"B", "B", "C", "C", "D")
target <- c("B", "C", "D", "J",
"E", "F", "G", "H", "I")
networkData <- data.frame(src, target)
simpleNetwork(networkData,fontSize=25)
View(networkData)
View(graph)
View(graph)
ask2answers <- read.delim("~/Desktop/ECE 720/ass1/ask2answers.tsv")
View(ask2answers)
ask2answers <- read.delim("ask2answers.tsv")
path()
ask2answers <- read.delim("./ask2answers.tsv")
getwd()
setwd()
setwd('~/Desktop/ECE 720/ass1/')
getwd()
ask2answers <- read.delim("./ask2answers.tsv")
ask2answers <- read.delim("./ask2answers.tsv")
simpleNetwork(ask2answers,fontSize=25)
g <- graph( c(0,1, 0,2, 1,2, 2,4), n=5 )
g <- graph( c(0,1, 0,2, 1,2, 2,4), n=5 )
g <- graph( c(0,1, 0,2, 1,2, 2,4), n=5 )
library(igraph)
g <- graph( c(0,1, 0,2, 1,2, 2,4), n=5 )
Dataset1.Media.Example.EDGES <- read.csv("~/Downloads/sunbelt2019/Data files/Dataset1-Media-Example-EDGES.csv")
View(Dataset1.Media.Example.EDGES)
Dataset1.Media.Example.NODES <- read.csv("~/Downloads/sunbelt2019/Data files/Dataset1-Media-Example-NODES.csv")
View(Dataset1.Media.Example.NODES)
net <- graph_from_data_frame(d=links, vertices=nodes, directed=T)
View(Dataset1.Media.Example.EDGES)
nodes = Dataset1.Media.Example.NODES
links = Dataset1.Media.Example.EDGES
net <- graph_from_data_frame(d=links, vertices=nodes, directed=T)
net
as_adjacency_matrix(net, attr="weight")
plot(net)
net <- graph_from_data_frame(d=ask2answers, directed=T)
net
as_adjacency_matrix(net, attr="weight")
plot(net)
plot(net, edge.arrow.size=.4,vertex.label=NA)
plot(net, layout=l)
plot(net, layout=layout_with_fr(net))
plot(net, edge.arrow.size=.1,vertex.label=NA)
plot(net, edge.arrow.size=.4,vertex.label=NA)
components(graph)
graph = rgraph(10, 1, 0.2, "graph", FALSE)
graph
degree(graph)
gden(graph, mode = "graph")
gplot(graph)
components(graph)
library(sna)
graph = rgraph(10, 1, 0.2, "graph", FALSE)
graph
degree(graph)
gden(graph, mode = "graph")
gplot(graph)
components(graph)
g<-rgraph(20,tprob=0.05)   #Generate a sparse random graph
#Find weak components
components(g,connected="weak")
#Find strong components
components(g,connected="strong")
#Find weak components
components(g,connected="weak")
#Find strong components
components(g)
g<-rgraph(20,tprob=0.05)   #Generate a sparse random graph
#Find weak components
components(g,connected="weak")
#Find strong components
components(g,connected="strong")
#Find weak components
components(g)
components(net)
as_adjacency_matrix(net, attr="weight")
as_adjacency_matrix(net)
answers_aksers = read.csv('ask2answers.tsv')
View(answers_aksers)
answers_aksers = read.csv('ask2answers.tsv', sep = '\t')
answers_aksers = read.csv('ask2answers.tsv', sep = '\t')
net <- graph_from_data_frame(d=ask2answers, directed=T)
net
as_adjacency_matrix(net)
answers_aksers = read.csv('ask2answers.tsv', sep = '\t')
net <- graph_from_data_frame(d=ask2answers, directed=T)
net
net_matrix = as_adjacency_matrix(net)
View(net_matrix)
net
components(net)
giant_components = components(net)
View(giant_components)
giant_components.membership
giant_components$membership
plot(giant_components)
component.size.byvertex(net)
component.size.byvertex(net_matrix)
component.size.byvertex(net)
component.size.byvertex(net_matrix)
net_matrix = as_adjacency_matrix(net)
component.size.byvertex(net_matrix)
View(net_matrix)
component.largestx(net)
component.largest(net)
component.dist(net)
g<-rgraph(20,tprob=0.06)
component.dist(g)
g
make_graph(answers_aksers)
make_graph(c(1, 2, 2, 3, 3, 4, 5, 6), directed = FALSE)
net
View(net)
View(g)
lpvs <- matrix(rnorm(200), 20, 10)
View(lpvs)
View(net_matrix)
mat = net_matrix$i
mat = net_matrix$i
mat = net_matrix$@i
matrix(net_matrix)
mat = matrix(net_matrix)
as.matrix(net_matrix)
net <- graph_from_data_frame(d=ask2answers, directed=T)
net
net_matrix = as_adjacency_matrix(net)
View(net_matrix)
net_matrix = as_matrix(net)
as(net_matrix, "Matrix")
a = as(net_matrix, "Matrix")
View(a)
a = as.matrix(net_matrix)
View(a)
component.dist(a)
component.largest(a)
cl = component.largest(a)
cl[0]
cl[1]
cl
component.largest(a)
View(a)
View(answers_aksers)
answers_aksers = read.csv('ask2answers.tsv', sep = '\t')
net <- graph_from_data_frame(d=ask2answers, directed=T)
net
net_matrix = as_adjacency_matrix(net)
mat = as.matrix(net_matrix)
View(mat)
graph = rgraph(10, 1, 0.2, "graph", FALSE)
graph
degree(graph)
gden(graph, mode = "graph")
gplot(graph)
View(graph)
components(graph)
components.largest(graph)
components.largest(graph)
component.largest(graph)
View(mat)
answers_aksers = read.csv('ask2answers.tsv', sep = '\t')
View(answers_aksers)
net <- graph_from_data_frame(d=ask2answers, directed=T)
net
mat = read.csv('mat.csv')
View(mat)
mat = read.csv('mat.csv')
View(mat)
gplot(mat)
component.largest(mat)
cl = component.largest(mat)
cl
gplot(cl)
gplot(component.largest(mat))
gplot(component.largest(mat, result = 'graph'))
gplot(mat)
ask2answers <- read.delim("./ask2answers.tsv")
net <- graph_from_data_frame(d=ask2answers, directed=T)
net
plot(net)
components(net)
gplot(component.largest(net, result = 'graph'))
gplot(component.largest(net, result = 'graph'))
m = as_adjacency_matrix(net)
gplot(component.largest(m, result = 'graph'))
m = as.matrix(m)
gplot(component.largest(m, result = 'graph'))
gplot(m)
View(m)
write.csv(m,file="a.csv",quote=F,row.names = F)
m
gplot(m)
gplot(component.largest(m, result = 'graph'))
gplot(component.largest(mat, result = 'graph'))
gplot(component.largest(m, result = 'graph'))
gplot(graph, gmode='digraph')
gplot(graph)
gplot(component.largest(mat, result = 'graph'))
gplot(component.largest(m, result = 'graph'))
View(m)
cl = component.largest(mat, result='graph')
View(cl)
cl2 = component.largest(m, result='graph')
View(cl2)
View(mat)
mat2 = as.matrix(mat)
View(mat2)
gplot(mat2)
cl = component.largest(mat2, result='graph')
cl = component.largest(mat2, result='graph')
mat2 = as.matrix(mat)
cl = component.largest(mat2, result='graph')
cl = component.largest(mat, result='graph')
mat2 = matrix(mat)
gplot(mat2)
mat2 = data.metrix(mat)
mat2 = data.matrix(mat)
gplot(mat2)
View(mat2)
cl = component.largest(mat, result='graph')
cl = component.largest(mat2, result='graph')
gplot(component.largest(mat2, result = 'graph'))
gplot(component.largest(mat, result = 'graph'))
View(mat)
mat = read.csv('mat.csv')
mat = read.csv('mat.csv')
mat = read.csv('mat.csv')
mat = read.csv('mat.csv', head = False)
mat = read.csv('mat.csv', header = False)
mat = read.csv('mat.csv', header = F)
gplot(mat)
=
gplot(component.largest(mat, result = 'graph'))
gplot(component.largest(mat, result = 'graph'))
gplot(component.largest(mat, result = 'graph'))
gplot(component.largest(m, result = 'graph'))
cl = component.largest(mat, result='graph')
gplot(component.largest(m, result = 'graph'))
mat2 = data.matrix(mat)
gplot(component.largest(mat2, result = 'graph'))
g<-rgraph(20,tprob=0.06)
g<-rgraph(20,tprob=0.06)
gplot(g)
gplot(component.largest(g,connected="strong",result="graph"))
g<-rgraph(20,tprob=0.06)
gplot(g)
gplot(component.largest(g,connected="strong",result="graph"))
g<-rgraph(20,tprob=0.06)
gplot(g)
gplot(component.largest(g,connected="strong",result="graph"))
gplot(component.largest(mat,connected="strong",result="graph"))
lgc<-component.largest(g,connected="strong")
gplot(g,vertex.col=2+lgc)
lgc<-component.largest(mat,connected="strong")
gplot(mat,vertex.col=2+lgc)
ask_ans = read.csv("./ask2answers.tsv")
ask_ans = read.csv("./ask2answers.tsv", sep = '\t')
ask_ans_edges = read.csv("./ask2answers.tsv", sep = '\t')
ask2answers = read.csv("./ask2answers.tsv", sep = '\t')
net <- graph_from_data_frame(d=ask2answers, directed=T)
gplot(net)
plot(net)
mat = as_adjacency_matrix(net)
mat = as.matrix(as_adjacency_matrix(net))
gplot(mat)
component.largest(net)
component.largest(net, result="graph"))
component.largest(net, result="graph")
component.largest(mat, result="graph")
giant_com = component.largest(mat, result="graph")
View(giant_com)
ask2answers = read.csv("./ask2answers.tsv", sep = '\t')
net <- graph_from_data_frame(d=ask2answers, directed=T)
mat = as.matrix(as_adjacency_matrix(net))
#write.table (x, file ="", sep ="", row.names =TRUE, col.names =TRUE, quote =TRUE)
gplot(mat)
giant_com = component.largest(mat, result="graph")
gplot(giant_com)
an <- read.delim("~/Desktop/ECE 720/ass1test/ask2answers.tsv")
View(an)
View(an)
aa <- read.delim("~/Desktop/ECE 720/ass1test/ask2answers.tsv")
View(aa)
net <- graph_from_data_frame(d=aa, directed=T)
mat = as.matrix(as_adjacency_matrix(net))
#write.table (x, file ="", sep ="", row.names =TRUE, col.names =TRUE, quote =TRUE)
gplot(mat)
giant_com = component.largest(mat, result="graph")
gplot(giant_com)
ask2answers = read.csv("./ask2answers.tsv", sep = '\t')
net <- graph_from_data_frame(d=ask2answers, directed=T)
mat = as.matrix(as_adjacency_matrix(net))
#write.table (x, file ="", sep ="", row.names =TRUE, col.names =TRUE, quote =TRUE)
gplot(mat)
giant_com = component.largest(mat, result="graph")
gplot(giant_com)
ask2answers = read.csv("./ask2answers.tsv", sep = '\t')
net <- graph_from_data_frame(d=ask2answers, directed=T)
mat = as.matrix(as_adjacency_matrix(net))
#write.table (x, file ="", sep ="", row.names =TRUE, col.names =TRUE, quote =TRUE)
gplot(mat)
giant_com = component.largest(mat, result="graph")
giant_com = component.largest(mat, result="graph", directed = F)
gplot(giant_com, directed=F)
giant_com = component.largest(mat, connected = "weak", result="graph")
giant_com = component.largest(mat, connected = "strong", result="graph")
gplot(giant_com, directed=F)
giant_com = component.largest(mat, connected = "recursive", result="graph")
giant_com = component.largest(mat, connected = "unilateral", result="graph")
gplot(giant_com, directed=F)
giant_com = component.largest(mat, connected = "weak", result="graph")
gplot(giant_com, directed=F)
giant_com = component.largest(mat, connected = "weak", result="graph")
gplot(giant_com, directed=F)
giant_com = component.largest(mat, connected = "weak", result="graph")
gplot(giant_com)
#write.table (x, file ="", sep ="", row.names =TRUE, col.names =TRUE, quote =TRUE)
gplot(mat)
giant_com = component.largest(mat, connected = "weak", result="graph")
gplot(giant_com)
write.table (mat, file ="askerAnswerer.tsv", sep ="\t", row.names =TRUE, col.names =TRUE, quote =TRUE)
write.table (mat, file ="askerAnswerer.tsv", sep ="\t")
write.table (mat, file ="askerAnswerer.tsv", sep ="\t", row.names =FALSE, col.names =FALSE, quote =TRUE)
write.table (mat, file ="askerAnswerer.tsv", sep ="\t", row.names =FALSE, col.names =FALSE)
write.table (mat, file ="askerAnswerer.tsv", row.names =FALSE, col.names =FALSE)
write.table (mat, file ="askerAnswerer.tsv")
write.table(giant_com, file ="asker-answerer-giant.tsv")
ask2answers = read.csv("./ask2answers.tsv", sep = '\t')
net <- graph_from_data_frame(d=ask2answers, directed=T)
mat = as.matrix(as_adjacency_matrix(net))
write.table(mat, file ="askerAnswerer.tsv")
gplot(mat)
giant_com = component.largest(mat, connected = "weak", result="graph")
write.table(giant_com, file ="asker-answerer-giant.tsv")
gplot(giant_com)
ask2answers = read.csv("./ask2answers.tsv", sep = '\t')
net <- graph_from_data_frame(d=ask2answers, directed=T)
mat = as.matrix(as_adjacency_matrix(net))
write.table(mat, file ="askerAnswerer.tsv")
gplot(mat)
giant_com = component.largest(mat, connected = "weak", result="graph")
write.table(giant_com, file ="asker-answerer-giant.tsv")
gplot(giant_com)
write.table(giant_com, file ="asker-answer-giant.tsv")
gplot(giant_com)
write.table(mat, file ="askerAnswerer.tsv")
getwd()
setwd('/Users/renyanwu/Desktop/ECE 720/ECE720Assignment1/RCommands')
ask2answers = read.csv("../data/ask2answers.tsv", sep = '\t')
net <- graph_from_data_frame(d=ask2answers, directed=T)
mat = as.matrix(as_adjacency_matrix(net))
write.table(mat, file ="../askerAnswerer.tsv")
gplot(mat)
giant_com = component.largest(mat, connected = "weak", result="graph")
write.table(giant_com, file ="../asker-answer-giant.tsv")
gplot(giant_com)
ask2answers = read.csv("../data/ask2answers.tsv", sep = '\t')
net <- graph_from_data_frame(d=ask2answers, directed=T)
mat = as.matrix(as_adjacency_matrix(net))
write.table(mat, file ="../data/askerAnswerer.tsv")
gplot(mat)
giant_com = component.largest(mat, connected = "weak", result="graph")
write.table(giant_com, file ="../data/asker-answer-giant.tsv")
gplot(giant_com)
ask2answers = read.csv("../data/ask2answers.tsv", sep = '\t')
net <- graph_from_data_frame(d=ask2answers, directed=T)
mat = as.matrix(as_adjacency_matrix(net))
write.table(mat, file ="../data/askerAnswerer.tsv")
gplot(mat)
giant_com = component.largest(mat, connected = "weak", result="graph")
write.table(giant_com, file ="../data/asker-answer-giant.tsv")
gplot(giant_com)
gplot(mat)
ask2answers = read.csv("../data/ask2answers.tsv", sep = '\t')
net <- graph_from_data_frame(d=ask2answers, directed=T)
mat = as.matrix(as_adjacency_matrix(net))
write.table(mat, file ="../data/askerAnswerer.tsv")
gplot(mat)
giant_com = component.largest(mat, connected = "weak", result="graph")
write.table(giant_com, file ="../data/asker-answer-giant.tsv")
gplot(giant_com)
